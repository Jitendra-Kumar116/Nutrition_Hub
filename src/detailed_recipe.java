
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;


public class detailed_recipe extends javax.swing.JFrame {

    /**
     * Creates new form detailed_recipe
     */
    int id;

    public detailed_recipe(int ID) {
        initComponents();
        id = ID;
        getRecipe(id);
        jinstructions.setEditable(false);
        Dimension d = new Dimension(Toolkit.getDefaultToolkit().getScreenSize());
        setSize(d.width, d.height);
        photolb1.setBounds(0, 0, d.width, d.height);
        ImageIcon i1 = new ImageIcon("src/uploads/slider12.jpg");
        Image img = i1.getImage().getScaledInstance(d.width, d.height, Image.SCALE_SMOOTH);
        photolb1.setIcon(new ImageIcon(img));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setVisible(true);
    }

    void getRecipe(int id) {
        try {
            HttpResponse<String> response = Unirest.get("https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/" + id + "/information")
                    .header("X-RapidAPI-Key", "652fb35be6msh43c979dd6e258dap1ede35jsn29e136726656")
                    .header("X-RapidAPI-Host", "spoonacular-recipe-food-nutrition-v1.p.rapidapi.com")
                    .asString();
            if (response.getStatus() == 200) {
                String res = response.getBody();
                System.out.println(res);
                JSONParser parser = new JSONParser();
                JSONObject jsonObject = (JSONObject) parser.parse(res);
//                JSONArray ja = (JSONArray) jsonObject.get("result");
                String title = (String) jsonObject.get("title");
                String image_url = (String) jsonObject.get("image");
                String instruction = (String) jsonObject.get("instructions");
                long readyTime = (Long) jsonObject.get("readyInMinutes");
                long servings = (Long) jsonObject.get("servings");
                URL url = new URL(image_url.replace("http://", "https://"));
                BufferedImage img = ImageIO.read(url);
                Image resized = img.getScaledInstance(photolb.getWidth(), photolb.getHeight(),Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(resized);
                photolb.setIcon(icon);
                jtitle.setText(title);
                jtime.setText("Time: "+readyTime+" Minutes");
                jservings.setText("Servings :"+servings);
                jinstructions.setText(instruction.replace(".", "\n"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        photolb = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jinstructions = new javax.swing.JTextArea();
        jtitle = new javax.swing.JLabel();
        jtime = new javax.swing.JLabel();
        jservings = new javax.swing.JLabel();
        photolb1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        photolb.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        photolb.setText("photo");
        photolb.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(photolb);
        photolb.setBounds(510, 90, 480, 280);

        jinstructions.setColumns(20);
        jinstructions.setRows(5);
        jScrollPane1.setViewportView(jinstructions);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(510, 480, 480, 170);

        jtitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jtitle.setForeground(new java.awt.Color(255, 255, 255));
        jtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jtitle.setText("recipe");
        getContentPane().add(jtitle);
        jtitle.setBounds(510, 380, 480, 40);

        jtime.setForeground(new java.awt.Color(255, 255, 255));
        jtime.setText("jLabel1");
        getContentPane().add(jtime);
        jtime.setBounds(510, 440, 220, 30);

        jservings.setForeground(new java.awt.Color(255, 255, 255));
        jservings.setText("jLabel2");
        getContentPane().add(jservings);
        jservings.setBounds(750, 440, 240, 30);

        photolb1.setText("jLabel1");
        getContentPane().add(photolb1);
        photolb1.setBounds(1020, 0, 38, 16);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(detailed_recipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(detailed_recipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(detailed_recipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(detailed_recipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new detailed_recipe(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jinstructions;
    private javax.swing.JLabel jservings;
    private javax.swing.JLabel jtime;
    private javax.swing.JLabel jtitle;
    private javax.swing.JLabel photolb;
    private javax.swing.JLabel photolb1;
    // End of variables declaration//GEN-END:variables
}
