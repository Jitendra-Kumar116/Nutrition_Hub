
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.table.AbstractTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;


public class recipe_cost extends javax.swing.JFrame {

    /**
     * Creates new form recipe_cost
     */
    int id;
    ArrayList <cost> al;
    mytablemodel tm;
    public recipe_cost(int ID) {
        initComponents();
        id = ID;
        al = new ArrayList<>();
        tm = new mytablemodel();
        jTable1.setModel(tm);
        getRecipeCost();
        Dimension d = new Dimension(Toolkit.getDefaultToolkit().getScreenSize());
        setSize(d.width, d.height);
        photolb.setBounds(0, 0, d.width, d.height);
        ImageIcon i1 = new ImageIcon("src/uploads/slider12.jpg");
        Image img = i1.getImage().getScaledInstance(d.width, d.height, Image.SCALE_SMOOTH);
        photolb.setIcon(new ImageIcon(img));
        setVisible(true);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
    }

    class mytablemodel extends AbstractTableModel{

        @Override
        public int getRowCount() {
            return al.size();
        }

        @Override
        public int getColumnCount() {
         return 4;
        }

        public String getColumnName(int j){
            String c[] ={"name","amount","unit","price"};
            return c[j];
        }
        
        @Override
        public Object getValueAt(int i, int j) {
            cost ct = al.get(i);
            if(j==0){
                return ct.name;
            }else if(j==1){
                return ct.value;
            }else if(j==2){
                return ct.unit;
            }else{
                return ct.price;
            }
        }
        
    }
    
    void getRecipeCost(){
        try {
            HttpResponse<String> response = Unirest.get("https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/"+id+"/priceBreakdownWidget.json")
                    .header("X-RapidAPI-Key", "652fb35be6msh43c979dd6e258dap1ede35jsn29e136726656")
                    .header("X-RapidAPI-Host", "spoonacular-recipe-food-nutrition-v1.p.rapidapi.com")
                    .asString();
            if(response.getStatus()==200){
                String res = response.getBody();
                JSONParser parser = new JSONParser();
                JSONObject jsonObject = (JSONObject) parser.parse(res);
                JSONArray ja = (JSONArray) jsonObject.get("ingredients");
                double recipe_total_cost = (double) jsonObject.get("totalCost");
                double recipe_cost_per_serving = (double) jsonObject.get("totalCostPerServing");
                total_cost.setText("TOTAL PRICE :"+recipe_total_cost+"");
                total_cost_per_serving.setText("COST PER SERVING :"+recipe_cost_per_serving+"");
                for(int i=0;i<ja.size();i++){
                    JSONObject jo = (JSONObject) ja.get(i);
                    String name = (String) jo.get("name");
                    double price = (double) jo.get("price");
                    JSONObject jo1 = (JSONObject) jo.get("amount");
                    JSONObject jo2 = (JSONObject) jo1.get("metric");
                    double value =  (double) jo2.get("value");
                    String unit = (String) jo2.get("unit");
                    System.out.println(name+" "+price+" "+value+" "+unit);
                    al.add(new cost(name,value,unit,price));
                }
                tm.fireTableDataChanged();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        total_cost = new javax.swing.JLabel();
        total_cost_per_serving = new javax.swing.JLabel();
        photolb = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(450, 190, 480, 320);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("COST OF RECIPE");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(580, 130, 220, 30);

        total_cost.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        total_cost.setForeground(new java.awt.Color(255, 255, 255));
        total_cost.setText("Total cost");
        getContentPane().add(total_cost);
        total_cost.setBounds(580, 540, 300, 50);

        total_cost_per_serving.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        total_cost_per_serving.setForeground(new java.awt.Color(255, 255, 255));
        total_cost_per_serving.setText("Total cost per serving");
        getContentPane().add(total_cost_per_serving);
        total_cost_per_serving.setBounds(580, 590, 300, 50);

        photolb.setText("jLabel2");
        getContentPane().add(photolb);
        photolb.setBounds(0, 0, 37, 16);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(recipe_cost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(recipe_cost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(recipe_cost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(recipe_cost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new recipe_cost(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel photolb;
    private javax.swing.JLabel total_cost;
    private javax.swing.JLabel total_cost_per_serving;
    // End of variables declaration//GEN-END:variables
}
